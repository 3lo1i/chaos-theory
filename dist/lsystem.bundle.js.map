{"version":3,"sources":["webpack:///./src/modules/lsystem/drawingtool.js","webpack:///./src/modules/lsystem/lsystem.js","webpack:///./src/modules/lsystem/templates/lsystem.pug","webpack:///./src/modules/lsystem/templates/presetitem.pug","webpack:///./src/modules/lsystem/templates/tabs.pug","webpack:///./src/modules/lsystem/turtle.js","webpack:///./src/modules/lsystem/util.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C;;AAEA;AACA;AACA,sCAAsC,KAAK;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,KAAK,GAAG,KAAK,UAAU,SAAS,GAAG,SAAS;AAC3F;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrJA;AACA;AACA;AACsC;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO,IAAI;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,2DAA2D;AAClG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mFAAuC,YAAY,YAAY,aAAa;AAC5E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA,4B;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAA2C,cAAc;AACzD,wBAAwB,SAAS;AACjC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gEAAgB;;;;;;;;;;;;;;;;;;;;;;;ACpYhB;;AAEA,2BAA2B,kCAAkC,aAAa;AAC1E;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAycA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,2mDAA2mD,43CAA43C;AACv+F,0B;;;;;;;;;;;AChwBA;;AAEA,2BAA2B,kCAAkC,cAAc,mCAAmC,EAAE,kBAAkB,qEAAqE,QAAQ,mBAAmB,QAAQ,4GAA4G,sGAAsG;AAC5b,0B;;;;;;;;;;;ACHA;;AAEA,2BAA2B,kCAAkC,aAAa,2cAA2c;AACrhB,0B;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8CAA8C;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"lsystem.bundle.js","sourcesContent":["import {Rect, Point} from './util';\n\nexport class AbstractDrawingTool {\n  constructor(viewportWidth, viewportHeight) {\n    if (this.constructor == AbstractDrawingTool) {\n      throw new Error(`Abstract classes can't be instantiated.`);\n    }\n    this.boundingRect = new Rect();\n    this.viewportRect = new Rect(0, 0, viewportWidth, viewportHeight);\n    this.viewportRect.shrink(5);\n  }\n\n  start() {\n    throw new Error(`Method not implemented.`);\n  }\n\n  moveTo(x, y) {\n    throw new Error(`Method not implemented.`);\n  }\n\n  lineTo(x, y) {\n    throw new Error(`Method not implemented.`);\n  }\n\n  finish() {\n    throw new Error(`Method not implemented.`);\n  }\n}\n\nexport class DrawingTool extends AbstractDrawingTool {\n  constructor(canvas, context) {\n    super(canvas.width, canvas.height);\n    this.canvas = canvas;\n    this.context = context;\n    this.lines = [];\n  }\n\n  start() {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.lines.length = 0;\n    this.boundingRect = new Rect();\n  }\n\n  moveTo(x, y) {\n    const p = new Point(x, y);\n    this.lines.push([p]);\n    this.boundingRect.stretchToPoint(p);\n  }\n\n  lineTo(x, y) {\n    if (!this.lines.length) {\n      return;\n    }\n    const p = new Point(x, y);\n    this.lines[this.lines.length - 1].push(p);\n    this.boundingRect.stretchToPoint(p);\n  }\n\n  finish() {\n    const rectangle = this.boundingRect;\n    rectangle.notZero();\n    const into = this.viewportRect;\n\n    const fitRect = Rect.fit(rectangle, into);\n\n    const factorX = fitRect.width / rectangle.width;\n    const factorY = fitRect.height / rectangle.height;\n    const factor = factorX < factorY ? factorX : factorY;\n    const tx = -rectangle.x * factor + fitRect.x;\n    const ty = -rectangle.y * factor + fitRect.y;\n\n    // this.context.strokeRect(fitRect.x, fitRect.y, fitRect.width, fitRect.height);\n\n    this.context.save();\n    this.context.translate(tx, ty);\n    // this.context.translate(-into.width / 2, -into.height / 2);\n    this.context.scale(factor, factor);\n    // this.context.translate(into.width / 2, into.height / 2);\n    this.context.beginPath();\n    let startPoint;\n    let point;\n    for (let i = 0; i < this.lines.length; i++) {\n      let line = this.lines[i];\n      point = line[0];\n      startPoint = point;\n      this.context.moveTo(point.x, point.y);\n      for (let j = 1; j < line.length; j++) {\n        point = line[j];\n        this.context.lineTo(point.x, point.y);\n      }\n    }\n    if (startPoint.eq(point)) {\n      this.context.closePath();\n    }\n    this.context.lineWidth = this.context.lineWidth * 0.5 / factor;\n    this.context.stroke();\n    this.context.restore();\n  }\n}\n\nexport class SVGDrawingTool extends AbstractDrawingTool {\n  constructor(svg) {\n    super(svg.attr('width'), svg.attr('height'));\n    this.svg = svg;\n    this.pointsStack = [];\n    this.stroke = { width: 1 };\n    this.fill = 'none';\n  }\n\n  start() {\n    this.svg.clear();\n    this.pointsStack.length = 0;\n    this.boundingRect = new Rect();\n  }\n\n  moveTo(x, y) {\n    if (this.pointsStack.length) {\n      this.svg.polyline(this.pointsStack).fill(this.fill).stroke(this.stroke);\n    }\n    this.pointsStack.length = 0;\n    this.pointsStack.push([x, y]);\n    this.boundingRect.stretchToPoint({x, y});\n  }\n\n  lineTo(x, y) {\n    this.pointsStack.push([x, y]);\n    this.boundingRect.stretchToPoint({x, y});\n  }\n\n  finish() {\n    this.svg.polyline(this.pointsStack).fill(this.fill).stroke(this.stroke);\n    this.pointsStack.length = 0;\n\n    const rectangle = this.boundingRect;\n    const into = this.viewportRect;\n\n    const fitRect = Rect.fit(rectangle, into);\n\n    const factorX = fitRect.width / rectangle.width;\n    const factorY = fitRect.height / rectangle.height;\n    const factor = factorX < factorY ? factorX : factorY;\n    const tx = -rectangle.x * factor + fitRect.x;\n    const ty = -rectangle.y * factor + fitRect.y;\n\n    // this.svg.attr('transform', `translate(${ tx },${ ty }) scale(${ factor },${ factor })`);\n    this.svg.translate(tx, ty);\n    this.svg.scale(factor, factor);\n  }\n}\n","import template from './templates/lsystem.pug';\nimport tabsTemplate from './templates/tabs.pug';\nimport presetTemplate from './templates/presetitem.pug';\nimport { DrawingTool, SVGDrawingTool } from './drawingtool';\nimport Turtle from './turtle';\nimport presets from './presets.json';\nimport $ from 'jquery';\nimport SVG from 'svg.js';\n\nconsole.log('lsystem module has loaded');\n\nconst title = 'L-системы';\n\nconst MAX_RULES = 5;\nconst TURTLE_STEP = 10;\nconst CRITICAL_PATH_LENGTH = 200000;\nconst FATAL_PATH_LENGTH = 100000000;\nconst PNG_WIDTH = 2048;\nconst PNG_HEIGHT = 2048;\nconst SVG_WIDTH = 2048;\nconst SVG_HEIGHT = 2048;\n\n\nconst init = () => {\n  console.log('lsystem init');\n  const activity = $(template());\n\n  const tabs = $(tabsTemplate());\n  $('#navbar-tabs-container').append(tabs);\n\n  var path;\n  var rules = [\n    {predecessor: 'F', successor: 'F'}\n  ];\n\n  const canvas = activity.find('#fractal-canvas').get(0);\n  const context = canvas.getContext('2d');\n  const canvasDrawingTool = new DrawingTool(canvas, context);\n  const turtle = new Turtle();\n\n  const getLSystemVariables = () => {\n    const val = activity\n      .find('#variables-input')\n      .val()\n      .split('');\n\n    const letters = val.filter((letter, i) =>\n      // filter non-letters\n      letter.match(/[A-Za-z]/) &&\n      // filter duplicate values\n      val.indexOf(letter) === i);\n    return letters.length ? letters.splice(0, MAX_RULES) : ['F'];\n  };\n\n  const serializeForm = () => {\n    const form = activity.find('#fractal-form');\n    // transform serializeArray data to JSON\n    const o = form\n      .serializeArray()\n      .reduce((obj, itm) => {\n        if (obj[itm.name]) {\n          if (!obj[itm.name].push) {\n            obj[itm.name] = [obj[itm.name]];\n          }\n          obj[itm.name].push(itm.value || '');\n        } else {\n          obj[itm.name] = itm.value || '';\n        }\n        return obj;\n      }, {});\n\n    const data = {\n      name: 'Текущие значения',\n      iterations: Number(o.iterations),\n      start: o.start,\n      rules: [],\n      angle: Number(o.angle)\n    };\n\n    const variables = getLSystemVariables();\n\n    activity\n      .find('#rules-container .row')\n      .each((index, el) => {\n        el = $(el);\n        if (index >= variables.length) {\n          return false;\n        }\n        const predecessor = el\n          .find('.rule-predecessor')\n          .val();\n        if (!variables.includes(predecessor)) {\n          return;\n        }\n        const successor = el\n          .find('.rule-successor')\n          .val();\n        const rule = { predecessor, successor };\n        data.rules.push(rule);\n    });\n    rules = data.rules;\n\n    return data;\n  };\n\n  const deserializeForm = (data) => {\n    activity.find('#angle-input').val(data.angle);\n    activity.find('#iterations-input').val(data.iterations);\n    activity.find('#start-input').val(data.start);\n    rules = data.rules.map((rule) => ({ predecessor: rule.predecessor, successor: rule.successor }));\n    updateRules();\n  };\n\n  const saveAs = (blob, filename) => {\n    const anchor = document.createElement('a');\n    const dataUrl  = URL.createObjectURL(blob);\n    anchor.setAttribute('href', dataUrl);\n    anchor.setAttribute('target', '_blank');\n    anchor.setAttribute('download', filename);\n    if (document.createEvent) {\n      const evtObj = document.createEvent('MouseEvents');\n      evtObj.initEvent('click', true, true);\n      anchor.dispatchEvent(evtObj);\n    }\n    else if (anchor.click) {\n      anchor.click();\n    }\n  };\n\n  const savePNG = (event) => {\n    const data = serializeForm();\n\n    const canvas = $(`<canvas width=\"${ PNG_WIDTH }\" height=\"${ PNG_HEIGHT }\"/>`).get(0);\n    const context = canvas.getContext('2d');\n    const pngDrawingTool = new DrawingTool(canvas, context);\n\n    turtle.start(0, 0, 0);\n    turtle.angleStep = data.angle;\n    turtle.step = TURTLE_STEP;\n    turtle.drawPath(path, pngDrawingTool);\n\n    canvas.toBlob((blob) => saveAs(blob, 'fractal.png'), 'image/png');\n    if (event) {\n      event.preventDefault();\n    }\n  };\n\n  const saveSVG = (event) => {\n    const data = serializeForm();\n    \n    const div = $('<div/>').get(0);\n    const draw = SVG(div).size(SVG_WIDTH, SVG_HEIGHT);\n    const svgTool = new SVGDrawingTool(draw);\n\n    turtle.start(0, 0, 0);\n    turtle.angleStep = data.angle;\n    turtle.step = TURTLE_STEP;\n    turtle.drawPath(path, svgTool);\n\n    const blob = new Blob([draw.svg()], {type: 'image/svg+xml'});\n    saveAs(blob, 'fractal.svg');\n    if (event) {\n      event.preventDefault();\n    }\n  };\n\n  const getWord = (axiom, rules, force=false) => {\n    let word = '';\n    for (const char of axiom.split('')) {\n      const r = rules.find((rule) => rule.predecessor === char);\n      if (r) {\n        word += r.successor;\n      } else {\n        word += char;\n      }\n      if (!force && word.length > CRITICAL_PATH_LENGTH) {\n        break;\n      }\n      if (word.length > FATAL_PATH_LENGTH) {\n        break;\n      }\n    }\n    return word;\n  };\n\n  const makeFractal = (data, force=false) => {\n    let overflow = false;\n\n    path = data.start;\n    // var stepsEl = activity.find('#steps');\n    // stepsEl.html('<li>' + path + '</li>');\n    for (let i = 0; i < data.iterations; i++) {\n      const newPath = getWord(path, data.rules, force);\n      if (newPath.length >= CRITICAL_PATH_LENGTH) {\n        if (newPath.length >= FATAL_PATH_LENGTH) {\n          alert(`Слишком большое число команд! (>${ FATAL_PATH_LENGTH })`);\n          return;\n        }\n        overflow = true;\n        if (!force) {\n          break;\n        }\n      }\n      path = newPath;\n      // stepsEl.append('<li>' + path + '</li>');\n    }\n\n    activity.find('#json-data').val(JSON.stringify(data, null, 2));\n\n    if (overflow) {\n      activity.find('#slow-alert').show();\n    } else {\n      activity.find('#slow-alert').hide();\n    }\n    drawPath();\n  };\n\n\n  const drawPath = (event) => {\n    if (!path) {\n      console.error('Path is empty!');\n      return;\n    }\n\n    turtle.start(0, 0, 0);\n    turtle.angleStep = serializeForm().angle;\n    turtle.step = 10;\n    turtle.drawPath(path, canvasDrawingTool);\n  };\n\n\n  const onLSystemParamsChange = () => {\n    const data = serializeForm();\n    makeFractal(data, false);\n  };\n\n  activity.find('#draw-btn').click(() => makeFractal(serializeForm(), true));\n  activity.find('#save-png-btn').click(savePNG);\n  activity.find('#save-svg-btn').click(saveSVG);\n  activity.find('#angle-input').change(drawPath);\n  activity.find('#iterations-input').change(onLSystemParamsChange);\n  activity.find('#start-input').change(onLSystemParamsChange);\n  activity.find('#save-json-btn').click(() => {\n    let data = {};\n    try {\n      data = JSON.parse(activity.find('#json-data').val());\n    } catch (e) {\n      alert(e);\n      return;\n    }\n    data.name = data.name || 'Текущие значения';\n    const maxIterations = 15;\n    const minIterations = 0;\n    data.iterations = Math.min(Math.max(Number(data.iterations) || 0, minIterations), maxIterations);\n    const maxAngle = 180;\n    const minAngle = 0;\n    data.start = data.start || '';\n    data.rules = data.rules || [];\n    for (let i = 0; i < data.rules.length; i++) {\n      let rule = data.rules[i];\n      if (typeof rule !== 'object') {\n        rule = {};\n      }\n      rule.predecessor = rule.predecessor || '';\n      rule.successor = rule.successor || '';\n      if (rule.predecessor.match(/[^A-Za-z\\s\\[\\]\\+\\-]/g)) {\n        rule.predecessor = rule.predecessor.replace(/[^A-Za-z\\s\\[\\]\\+\\-]/g, '');\n      }\n      rule.predecessor = rule.predecessor.substr(0, 1);\n      if (rule.successor.match(/[^A-Za-z\\s\\[\\]\\+\\-]/g)) {\n        rule.successor = rule.successor.replace(/[^A-Za-z\\s\\[\\]\\+\\-]/g, '');\n      }\n      data.rules[i] = rule;\n    }\n    data.angle = Math.min(Math.max(Number(data.angle) || 0, minAngle), maxAngle);\n    activity.find('#json-data').val(JSON.stringify(data, null, 2));\n    deserializeForm(data);\n  });\n\n\n  const updateRules = () => {\n    activity\n      .find('#rules-container .row')\n      .each((index, el) => {\n        const rule = rules[index];\n        el = $(el);\n        if (rule) {\n          const { predecessor, successor } = rule;\n          el.show();\n          el.find('.rule-predecessor')\n            .val(predecessor);\n          el\n            .find('.rule-successor')\n            .val(successor);      \n        } else {\n          el.val('')\n            .hide();\n        }\n      });\n    const letters = rules.map((r) => r.predecessor);\n    activity\n      .find('#variables-input')\n      .val(letters.join(', '));\n    activity\n      .find('#json-data')\n      .val(JSON.stringify(serializeForm(), null, 2));\n  };\n\n  // variables input handler\n  activity\n    .find('#variables-input')\n    .keyup(() => {\n      const letters = getLSystemVariables();\n\n      rules.length = letters.length;\n      letters.forEach((letter, i) => {\n        const rule = rules[i];\n        if (!rule) {\n          rules[i] = { predecessor: letter, successor: letter };\n        } else if (rule.predecessor !== letter) {\n          rule.predecessor = letter;\n          rule.successor = letter;\n        }\n      });\n      updateRules();\n    });\n\n  const restrictInput = (event) => {\n    const t = event.target;\n    if (t.value.match(/[^A-Za-z\\s\\[\\]\\+\\-]/g)) {\n      t.value = t.value.replace(/[^A-Za-z\\s\\[\\]\\+\\-]/g, '');\n    }\n  };\n\n  // start input handler\n  activity\n    .find('#start-input')\n    .keyup(restrictInput);\n\n  // prevent form submit on enter\n  activity\n    .find('#fractal-form')\n    .on('keydown', (e) => {\n      if (e.keyCode == 13) {\n        if (e.target.tagName === 'INPUT') {\n          $(e.target).change();\n        }\n        e.preventDefault();\n      }\n    });\n\n  // rules successor input handler\n  activity\n    .find('#rules-container .rule-successor')\n    .keyup(restrictInput)\n    .change(onLSystemParamsChange);\n\n  // populate examples dropdown\n  {\n    const loadPreset = (event) => {\n      deserializeForm(event.data.preset);\n      makeFractal(event.data.preset);\n      event.preventDefault();\n    };\n    presets.forEach((preset, index) => {\n      const name = preset.name;\n      const presetLink = $(presetTemplate({ index, name }));\n      presetLink.click({ preset }, loadPreset);\n      activity.find('#presets-list').append(presetLink);\n    });\n  }\n\n  // load initial lsystem and draw it\n  {\n    const data = presets[0];\n    deserializeForm(data);\n    makeFractal(data);\n  }\n\n  return activity;\n};\n\nconst destroy = () => {\n  console.log('lsystem destroyed');\n\n  $('#lsystem-tabs-select').remove();\n};\n\nexport default { title, init, destroy };\n","var pug = require(\"!../../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_mixins[\"octicon-alert\"] = pug_interp = function(){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\npug_html = pug_html + \"\\u003Cspan class=\\\"octicon\\\"\\u003E\\u003Csvg xmlns=\\\"http:\\u002F\\u002Fwww.w3.org\\u002F2000\\u002Fsvg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 16\\\"\\u003E\\u003Cpath fill-rule=\\\"evenodd\\\" d=\\\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\\\"\\u002F\\u003E\\u003C\\u002Fsvg\\u003E\\u003C\\u002Fspan\\u003E\";\n};\n\n\n\n\n\n\n\n\npug_mixins[\"octicon-arrow-right\"] = pug_interp = function(){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\npug_html = pug_html + \"\\u003Cspan class=\\\"octicon\\\"\\u003E\\u003Csvg xmlns=\\\"http:\\u002F\\u002Fwww.w3.org\\u002F2000\\u002Fsvg\\\" width=\\\"10\\\" height=\\\"16\\\" viewBox=\\\"0 0 10 16\\\"\\u003E\\u003Cpath fill-rule=\\\"evenodd\\\" d=\\\"M10 8L4 3v3H0v4h4v3l6-5z\\\"\\u002F\\u003E\\u003C\\u002Fsvg\\u003E\\u003C\\u002Fspan\\u003E\";\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npug_mixins[\"octicon-desktop-download\"] = pug_interp = function(){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\npug_html = pug_html + \"\\u003Cspan class=\\\"octicon\\\"\\u003E\\u003Csvg xmlns=\\\"http:\\u002F\\u002Fwww.w3.org\\u002F2000\\u002Fsvg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 16\\\"\\u003E\\u003Cpath fill-rule=\\\"evenodd\\\" d=\\\"M4 6h3V0h2v6h3l-4 4-4-4zm11-4h-4v1h4v8H1V3h4V2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z\\\"\\u002F\\u003E\\u003C\\u002Fsvg\\u003E\\u003C\\u002Fspan\\u003E\";\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npug_mixins[\"octicon-sync\"] = pug_interp = function(){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\npug_html = pug_html + \"\\u003Cspan class=\\\"octicon\\\"\\u003E\\u003Csvg xmlns=\\\"http:\\u002F\\u002Fwww.w3.org\\u002F2000\\u002Fsvg\\\" width=\\\"12\\\" height=\\\"16\\\" viewBox=\\\"0 0 12 16\\\"\\u003E\\u003Cpath fill-rule=\\\"evenodd\\\" d=\\\"M10.236 7.4a4.15 4.15 0 0 1-1.2 3.6 4.346 4.346 0 0 1-5.41.54l1.17-1.14-4.3-.6.6 4.2 1.31-1.26c2.36 1.74 5.7 1.57 7.84-.54a5.876 5.876 0 0 0 1.74-4.46l-1.75-.34zM2.956 5a4.346 4.346 0 0 1 5.41-.54L7.196 5.6l4.3.6-.6-4.2-1.31 1.26c-2.36-1.74-5.7-1.57-7.85.54-1.24 1.23-1.8 2.85-1.73 4.46l1.75.35A4.17 4.17 0 0 1 2.956 5z\\\"\\u002F\\u003E\\u003C\\u002Fsvg\\u003E\\u003C\\u002Fspan\\u003E\";\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npug_mixins[\"form-row\"] = pug_interp = function(label){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\npug_html = pug_html + \"\\u003Cdiv class=\\\"form-group row\\\"\\u003E\\u003Clabel class=\\\"col-sm-3\\\"\\u003E\" + (pug.escape(null == (pug_interp = label) ? \"\" : pug_interp)) + \"\\u003C\\u002Flabel\\u003E\\u003Cdiv class=\\\"col-sm-9\\\"\\u003E\";\nblock && block();\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\n};\npug_mixins[\"input-group-plus-minus\"] = pug_interp = function(target, step){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\npug_html = pug_html + \"\\u003Cdiv class=\\\"input-group input-group-plus-minus\\\"\\u003E\";\nblock && block();\npug_html = pug_html + \"\\u003Cdiv class=\\\"input-group-append\\\"\\u003E\\u003Cbutton\" + (\" class=\\\"btn btn-outline-secondary\\\"\"+pug.attr(\"data-target\", target, true, true)+\" data-action=\\\"increment\\\"\"+pug.attr(\"data-step\", step, true, true)) + \"\\u003E+\\u003C\\u002Fbutton\\u003E\\u003Cbutton\" + (\" class=\\\"btn btn-outline-secondary\\\"\"+pug.attr(\"data-target\", target, true, true)+\" data-action=\\\"decrement\\\"\"+pug.attr(\"data-step\", step, true, true)) + \"\\u003E-\\u003C\\u002Fbutton\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\n};\npug_html = pug_html + \"\\u003Cdiv class=\\\"tab-content\\\"\\u003E\\u003Cdiv class=\\\"tab-pane fade container show active\\\" id=\\\"activity-tab-model\\\"\\u003E\\u003Cdiv class=\\\"row\\\"\\u003E\\u003Cdiv class=\\\"col-12 col-lg-6\\\"\\u003E\\u003Ccanvas class=\\\"img-thumbnail\\\" id=\\\"fractal-canvas\\\" width=\\\"500\\\" height=\\\"500\\\"\\u003EВаш браузер не поддерживает canvas.\\u003C\\u002Fcanvas\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"col-12 col-lg-6\\\"\\u003E\\u003Cform id=\\\"fractal-form\\\"\\u003E\";\npug_mixins[\"form-row\"].call({\nblock: function(){\npug_mixins[\"input-group-plus-minus\"].call({\nblock: function(){\npug_html = pug_html + \"\\u003Cinput class=\\\"form-control input-sm\\\" id=\\\"iterations-input\\\" type=\\\"number\\\" name=\\\"iterations\\\" min=\\\"0\\\" max=\\\"15\\\" value=\\\"1\\\"\\u003E\";\n}\n}, \"#iterations-input\", 1);\n}\n}, \"Количество итераций:\");\npug_mixins[\"form-row\"].call({\nblock: function(){\npug_html = pug_html + \"\\u003Cinput class=\\\"form-control input-sm\\\" id=\\\"variables-input\\\" type=\\\"text\\\" name=\\\"variables\\\" value=\\\"A B\\\"\\u003E\";\n}\n}, \"Переменные:\");\npug_mixins[\"form-row\"].call({\nblock: function(){\npug_html = pug_html + \"\\u003Cdiv class=\\\"input-group\\\"\\u003E\\u003Cinput class=\\\"form-control input-sm\\\" id=\\\"constants-input\\\" type=\\\"text\\\" value=\\\"F b + - [ ]\\\" disabled=\\\"true\\\"\\u003E\\u003C\\u002Fdiv\\u003E\";\n}\n}, \"Константы:\");\npug_mixins[\"form-row\"].call({\nblock: function(){\npug_html = pug_html + \"\\u003Cinput class=\\\"form-control input-sm\\\" id=\\\"start-input\\\" type=\\\"text\\\" name=\\\"start\\\"\\u003E\";\n}\n}, \"Старт:\");\npug_html = pug_html + \"\\u003Cdiv class=\\\"form-group row\\\"\\u003E\\u003Clabel class=\\\"col-sm-3\\\"\\u003EПравила:\\u003C\\u002Flabel\\u003E\\u003Cdiv class=\\\"col-sm-9\\\" id=\\\"rules-container\\\"\\u003E\";\nvar n = 0;\nwhile (n < 5) {\npug_html = pug_html + \"\\u003Cdiv class=\\\"row mb-1\\\"\\u003E\\u003Cdiv class=\\\"col-sm-2 pr-0\\\"\\u003E\\u003Cinput class=\\\"form-control input-sm rule-predecessor\\\" type=\\\"text\\\" value=\\\"F\\\" disabled=\\\"true\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"col-sm-1 p-0\\\"\\u003E\";\npug_mixins[\"octicon-arrow-right\"]();\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"col-sm-9 pl-0\\\"\\u003E\\u003Cinput class=\\\"form-control input-sm rule-successor\\\" type=\\\"text\\\" value=\\\"F\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\nn++\n}\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\npug_mixins[\"form-row\"].call({\nblock: function(){\npug_mixins[\"input-group-plus-minus\"].call({\nblock: function(){\npug_html = pug_html + \"\\u003Cinput class=\\\"form-control input-sm\\\" id=\\\"angle-input\\\" name=\\\"angle\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"180\\\" value=\\\"90\\\"\\u003E\";\n}\n}, \"#angle-input\", 1);\n}\n}, \"Угол поворота:\");\npug_html = pug_html + \"\\u003C\\u002Fform\\u003E\\u003Cdiv class=\\\"alert alert-warning\\\" id=\\\"slow-alert\\\"\\u003E\";\npug_mixins[\"octicon-alert\"]();\npug_html = pug_html + \"\\nОтрисовка этой системы займет много времени. Нажмите \\u003Cstrong\\u003EСгенерировать фрактал\\u003C\\u002Fstrong\\u003E чтобы продолжить.\\u003C\\u002Fdiv\\u003E\\u003Cbutton class=\\\"btn btn-primary m-1\\\" id=\\\"draw-btn\\\"\\u003E\";\npug_mixins[\"octicon-sync\"]();\npug_html = pug_html + \"\\nСгенерировать фрактал\\u003C\\u002Fbutton\\u003E\\u003Cdiv class=\\\"dropdown m-1\\\"\\u003E\\u003Cbutton class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\u003E\";\npug_mixins[\"octicon-desktop-download\"]();\npug_html = pug_html + \"\\nСохранить как\\u003C\\u002Fbutton\\u003E\\u003Cdiv class=\\\"dropdown-menu\\\"\\u003E\\u003Ca class=\\\"dropdown-item\\\" id=\\\"save-png-btn\\\" href=\\\"#\\\"\\u003EPNG\\u003C\\u002Fa\\u003E\\u003Ca class=\\\"dropdown-item\\\" id=\\\"save-svg-btn\\\" href=\\\"#\\\"\\u003ESVG\\u003C\\u002Fa\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"dropdown m-1\\\"\\u003E\\u003Cbutton class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\u003EПримеры\\u003C\\u002Fbutton\\u003E\\u003Cdiv class=\\\"dropdown-menu\\\" id=\\\"presets-list\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"tab-pane fade\\\" id=\\\"activity-tab-code\\\"\\u003E\\u003Ch3\\u003EРедактировать JSON\\u003C\\u002Fh3\\u003E\\u003Cdiv class=\\\"container\\\"\\u003E\\u003Cdiv class=\\\"row mb-3\\\"\\u003E\\u003Ctextarea class=\\\"card\\\" id=\\\"json-data\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\"\\u003E\\u003C\\u002Ftextarea\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"row mb-3\\\"\\u003E\\u003Cbutton class=\\\"btn btn-primary\\\" id=\\\"save-json-btn\\\"\\u003EСохранить\\u003C\\u002Fbutton\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"tab-pane fade\\\" id=\\\"activity-tab-help\\\"\\u003E\\u003Cp\\u003EДля рисования L-систем на плоскости используется т.н. \\u003Ca href=\\\"https:\\u002F\\u002Fru.wikipedia.org\\u002Fwiki\\u002FЧерепашья_графика\\\"\\u003Eчерепашья графика\\u003C\\u002Fa\\u003E.\\n\\u003Cp\\u003EЧепепашка характеризуется координатами \\u003Cem\\u003Ex\\u003C\\u002Fem\\u003E и \\u003Cem\\u003Ey\\u003C\\u002Fem\\u003E на плоскости, а так же углом \\u003Cem\\u003E&alpha;\\u003C\\u002Fem\\u003E, указывающим направление, куда она смотрит. Черепашка может поворачиваться на месте на фиксированный угол, делать шаг вперед (фиксированное расстояние) и прочерчивать за собой след.\\n\\u003Cp\\u003EСистема команд для управления черепашкой следующая:\\n\\u003Ctable class=\\\"table\\\"\\u003E\\n\\u003Ctbody\\u003E\\n\\u003Ctr\\u003E\\n\\u003Ctd\\u003EF\\u003C\\u002Ftd\\u003E\\u003Ctd\\u003Eсделать шаг вперед, нарисовав линию\\u003C\\u002Ftd\\u003E\\n\\u003C\\u002Ftr\\u003E\\n\\u003Ctr\\u003E\\n\\u003Ctd\\u003Ed\\u003C\\u002Ftd\\u003E\\u003Ctd\\u003Eсделать шаг вперед, не рисуя\\u003C\\u002Ftd\\u003E\\n\\u003C\\u002Ftr\\u003E\\n\\u003Ctr\\u003E\\n\\u003Ctd\\u003E+\\u003C\\u002Ftd\\u003E\\u003Ctd\\u003Eповернуть по часовой стрелке\\u003C\\u002Ftd\\u003E\\n\\u003C\\u002Ftr\\u003E\\n\\u003Ctr\\u003E\\n\\u003Ctd\\u003E-\\u003C\\u002Ftd\\u003E\\u003Ctd\\u003Eповернуть против часовой стрелки\\u003C\\u002Ftd\\u003E\\n\\u003C\\u002Ftr\\u003E\\n\\u003Ctr\\u003E\\n\\u003Ctd\\u003E[\\u003C\\u002Ftd\\u003E\\u003Ctd\\u003Eзапомнить текущее положение\\u003C\\u002Ftd\\u003E\\n\\u003C\\u002Ftr\\u003E\\n\\u003Ctr\\u003E\\n\\u003Ctd\\u003E]\\u003C\\u002Ftd\\u003E\\u003Ctd\\u003Eвосстаносить предыдущее положение\\u003C\\u002Ftd\\u003E\\n\\u003C\\u002Ftr\\u003E\\n\\u003C\\u002Ftbody\\u003E\\n\\u003C\\u002Ftable\\u003E\\n\\u003Cp\\u003EВсе другие буквы черепашкой игнорируются, однако на их место могут подставляться другие команды в последующих итерациях.\\n\\u003Cp\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;","var pug = require(\"!../../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;;var locals_for_with = (locals || {});(function (name) {pug_html = pug_html + \"\\u003Ca class=\\\"dropdown-item\\\" id=\\\"preset_#{ index }\\\" data-preset=\\\"#{ index }\\\" href=\\\"#\\\"\\u003E\" + (pug.escape(null == (pug_interp = name) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\";}.call(this,\"name\" in locals_for_with?locals_for_with.name:typeof name!==\"undefined\"?name:undefined));;return pug_html;};\nmodule.exports = template;","var pug = require(\"!../../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003Cdiv class=\\\"nav nav-tabs navbar-nav align-self-end\\\" id=\\\"lsystem-tabs-select\\\"\\u003E\\u003Ca class=\\\"nav-link active\\\" href=\\\"#activity-tab-model\\\" data-toggle=\\\"tab\\\"\\u003EМодель\\u003C\\u002Fa\\u003E\\u003Ca class=\\\"nav-link\\\" href=\\\"#activity-tab-code\\\" data-toggle=\\\"tab\\\"\\u003EКод\\u003C\\u002Fa\\u003E\\u003Ca class=\\\"nav-link\\\" href=\\\"#activity-tab-help\\\" data-toggle=\\\"tab\\\"\\u003EСправка\\u003C\\u002Fa\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;","export default class Turtle {\n  constructor(startX = 0, startY = 0, startAngle = 0, angleStep = 0, step = 10) {\n    this.x = Number(startX);\n    this.y = Number(startY);\n    this.angle = Number(startAngle);\n    this.angleStep = Number(angleStep);\n    this.step = Number(step);\n    this.posStack = [];\n  }\n\n  turnCW() {\n    this.angle = (this.angle + this.angleStep) % 360;\n  }\n\n  turnCCW() {\n    this.angle = (this.angle - this.angleStep) % 360;\n  }\n\n  moveForward() {\n    const rad = this.angle / 180.0 * Math.PI;\n    this.x += Math.cos(rad) * this.step;\n    this.y += Math.sin(rad) * this.step;\n  }\n\n  start(startX, startY, startAngle) {\n    this.x = Number(startX);\n    this.y = Number(startY);\n    this.angle = Number(startAngle);\n    this.posStack.length = 0;\n  }\n\n  savePos() {\n    this.posStack.push({'x': this.x, 'y': this.y, 'angle': this.angle});\n  }\n\n  restorePos() {\n    if (!this.posStack.length) {\n      return;\n    }\n    const pos = this.posStack.pop();\n    this.x = pos.x;\n    this.y = pos.y;\n    this.angle = pos.angle;\n  }\n\n  drawPath(path, drawingTool) {\n    drawingTool.start();\n    drawingTool.moveTo(this.x, this.y);\n    for (let i = 0; i < path.length; i++) {\n      const command = path[i];\n      switch (command) {\n      case '-':\n        this.turnCCW();\n        break;\n      case '+':\n        this.turnCW();\n        break;\n      case 'b':\n        this.moveForward();\n        drawingTool.moveTo(this.x, this.y);\n        break;\n      case 'F':\n        this.moveForward();\n        drawingTool.lineTo(this.x, this.y);\n        break;\n      case '[':\n        this.savePos();\n        break;\n      case ']':\n        this.restorePos();\n        drawingTool.moveTo(this.x, this.y);\n        break;\n      default:\n        break;\n      }\n    }\n    drawingTool.finish();\n  }\n}\n","export class Point {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if this point and argument are equal (have similar coordinates).\n   * @param {Point} point - point to compare to.\n   * @param {Number} epsilon - maximum difference in coordinates of two points.\n   * @returns {Boolean} true, if points are close to each other, false otherwise.\n   */\n  eq(point, epsilon = 0.1) {\n    return Math.abs(this.x - point.x) < epsilon && Math.abs(this.y - point.y) < epsilon;\n  }\n}\n\nexport class Rect {\n  constructor(left = 0, top = 0, right = 0, bottom = 0) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  get width() {\n    return this.right - this.left;\n  }\n\n  get height() {\n    return this.bottom - this.top;\n  }\n\n  get x() {\n    return this.left;\n  }\n\n  get y() {\n    return this.top;\n  }\n\n  /**\n   * Move any side of rectangle to coordinates of point if its not inside rectangle.\n   * @param {Point} x, y - point that will be inside this rectangle.\n   */\n  stretchToPoint({x, y}) {\n    this.left = Math.min(this.left, x);\n    this.right = Math.max(this.right, x);\n    this.top = Math.min(this.top, y);\n    this.bottom = Math.max(this.bottom, y);\n  }\n\n  /**\n   * Expand dimentions of rectangle slightly if it have zero width or height.\n   */\n  notZero() {\n    if (this.width === 0) {\n      this.left -= 0.0001;\n      this.right += 0.0001;\n    }\n    if (this.height === 0) {\n      this.top -= 0.0001;\n      this.bottom += 0.0001;\n    }\n  }\n\n  /**\n   * Subtracts padding from each side of rectangle.\n   * Negative argument can be used to expand rectangle instead.\n   * @param {Number} padding - Number of units to subtract from each side.\n   */\n  shrink(padding) {\n    this.left += padding;\n    this.top += padding;\n    this.right -= padding;\n    this.bottom -= padding;\n  }\n\n  /**\n   * Creates new rectangle that has same aspect ratio as first argument that fitted and centered to second argument.\n   * @param {Rect} rectangle - new Rect will have aspect ratio of this rectangle.\n   * @param {Rect} into - new Rect will have dimentions that not exceeds this and will have center in same point.\n   * @returns {Rect} new rectangle\n   */\n  static fit(rectangle, into) {\n    let width   = rectangle.width;\n    let height  = rectangle.height;\n    const factorX = into.width  / width;\n    const factorY = into.height / height;\n\n    let factor = 1.0;\n\n    factor = factorX < factorY ? factorX : factorY;\n    width  *= factor;\n    height *= factor;\n\n    const x = into.x + (into.width  - width)  / 2;\n    const y = into.y + (into.height - height) / 2;\n\n    const fitRect = new Rect(x, y, x + width, y + height);\n    return fitRect;\n  };\n}\n"],"sourceRoot":""}